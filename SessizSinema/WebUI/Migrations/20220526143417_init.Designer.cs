// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebUI.Models.DataBase;

namespace WebUI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220526143417_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FilmFilmCategori", b =>
                {
                    b.Property<int>("FilmCategorisId")
                        .HasColumnType("int");

                    b.Property<int>("FilmsId")
                        .HasColumnType("int");

                    b.HasKey("FilmCategorisId", "FilmsId");

                    b.HasIndex("FilmsId");

                    b.ToTable("FilmFilmCategori");
                });

            modelBuilder.Entity("FilmSeans", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("SeanslarId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "SeanslarId");

                    b.HasIndex("SeanslarId");

                    b.ToTable("FilmSeans");
                });

            modelBuilder.Entity("WebUI.Models.DataBase.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmOzet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmPosterFotografYolu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FilmSuresi")
                        .HasColumnType("float");

                    b.Property<string>("FilmYönetmeni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime>("VizyonDanKalkisTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VizyonaGirisTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("WebUI.Models.DataBase.Entities.FilmCategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilmCategorileri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KategoriAdi = "Aksiyon"
                        },
                        new
                        {
                            Id = 2,
                            KategoriAdi = "Animasyon"
                        },
                        new
                        {
                            Id = 3,
                            KategoriAdi = "BilimKurgu"
                        },
                        new
                        {
                            Id = 4,
                            KategoriAdi = "Fantastik"
                        },
                        new
                        {
                            Id = 5,
                            KategoriAdi = "Gerilim"
                        },
                        new
                        {
                            Id = 6,
                            KategoriAdi = "Komedi"
                        });
                });

            modelBuilder.Entity("WebUI.Models.DataBase.Entities.Seans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Saati")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Seanslar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Saati = "10:00"
                        },
                        new
                        {
                            Id = 2,
                            Saati = "12:00"
                        },
                        new
                        {
                            Id = 3,
                            Saati = "14:00"
                        },
                        new
                        {
                            Id = 4,
                            Saati = "16:00"
                        },
                        new
                        {
                            Id = 5,
                            Saati = "18:00"
                        },
                        new
                        {
                            Id = 6,
                            Saati = "20:00"
                        },
                        new
                        {
                            Id = 7,
                            Saati = "22:00"
                        });
                });

            modelBuilder.Entity("FilmFilmCategori", b =>
                {
                    b.HasOne("WebUI.Models.DataBase.Entities.FilmCategori", null)
                        .WithMany()
                        .HasForeignKey("FilmCategorisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebUI.Models.DataBase.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmSeans", b =>
                {
                    b.HasOne("WebUI.Models.DataBase.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebUI.Models.DataBase.Entities.Seans", null)
                        .WithMany()
                        .HasForeignKey("SeanslarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
